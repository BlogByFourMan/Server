/*
 * Swagger Blog
 *
 * Simple Blog
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

import (
	"encoding/json"
	"fmt"
	"log"
	"net/http"
	"strconv"
	"strings"

	"../dal/db"
)

func ArticleIdCommentsGet(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.WriteHeader(http.StatusOK)
	r.ParseForm()

	s := strings.Split(r.URL.Path, "/")
	articleID, err := strconv.ParseInt((s[len(s)-2]), 10, 64)
	fmt.Println(articleID)
	if err != nil {
		log.Fatal(err)
	}

	articles := db.GetArticles(articleID)
	if len(articles) != 0 {
		comments := articles[0].Comments
		buf, _ := json.Marshal(comments)
		w.Write(buf)
	}
}

func ArticleIdGet(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.WriteHeader(http.StatusOK)

	s := strings.Split(r.URL.Path, "/")
	articleID, err := strconv.ParseInt((s[len(s)-1]), 10, 64)
	fmt.Println(articleID)
	if err != nil {
		log.Fatal(err)
	}

	articles := db.GetArticles(articleID)
	if len(articles) != 0 {
		buf, _ := json.Marshal(articles[0])
		w.Write(buf)
	}
}

func ArticlesGet(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.WriteHeader(http.StatusOK)

	articles := db.GetArticles(-1)

	buf, _ := json.Marshal(articles)
	w.Write(buf)
}
